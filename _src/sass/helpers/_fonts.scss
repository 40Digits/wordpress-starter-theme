//=================================
// FONTS
//=================================

//---------------------------------
// @font-face & @import
//---------------------------------

// @import url("http://hello.myfonts.net/count/2b0ad4");

// @font-face {
// 	font-family: 'ClarendonBT-Roman';
// 	src:url('assets/fonts/font-folder-name/font-file.eot');
// 	src:url('assets/fonts/font-folder-name/font-file.eot?#iefix') format('embedded-opentype'),
// 		url('assets/fonts/font-folder-name/font-file.woff') format('woff'),
// 		url('assets/fonts/font-folder-name/font-file.ttf') format('truetype');
// 	font-weight: 400;
// }

//---------------------------------
// Font Options
//---------------------------------

// Variables best utilized for font services without family grouping.
$font-regular: 'Regular Font Family Name', sans-serif;
$font-light: 'Light Font Family Name', sans-serif;
$font-bold: 'Bold Font Family Name', sans-serif;

// Variables best utilized for font services with family grouping.
$font-name-one: 'Font Name One', sans-serif;
$font-font-two: 'Font Name Two', sans-serif;

// Font List Map
$fonts: (
	fontone: (
		regular: $font-regular,
		light: $font-light,
		bold: $font-bold
	),
	fonttwo: (
		regular: $font-regular,
		light: $font-light,
		bold: $font-bold
	)
);

// Font Function
@function setfont($name, $weight: regular) {
	@if map-has-key($fonts, $name) {
		@return map-get(map-get($fonts, $name), $weight);
	} @else {
		@warn "Couldn't find a font named `#{$name}`.";
	}
}

// Font Mixin
@mixin setfont($family: sans-serif, $weight: normal) {
	// Default Font Stack
	@if $family == "default" {
		font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	}
	// Font One
	@if $family == "font-one" {
		font-family: $font-name-one;
	}
	// Font Two
	@if $family == "font-two" {
		font-family: $font-name-two;
	}
	font-weight: $weight;
}


//----------------------------------
// Icon Fonts
//----------------------------------

@font-face {
	font-family: 'icon-font';
	src: url('assets/fonts/icon-font/icon-font.eot');
	src: url('assets/fonts/icon-font/icon-font.eot#iefix') format('embedded-opentype'),
		 url('assets/fonts/icon-font/icon-font.woff') format('woff'),
		 url('assets/fonts/icon-font/icon-font.ttf') format('truetype'),
		 url('assets/fonts/icon-font/icon-font.svg#icon-font') format('svg');
	font-weight: normal;
	font-style: normal;
}

// Icon Font Placeholder
%icon-font {
	font-family: "icon-font" !important;
	width: 1em;
	margin: 0;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-align: center;
	text-decoration: inherit;
	text-transform: none;
	line-height: 1em;
	speak: none;
}

// Mixin to get icon-fonts going.
// DO NOT APPLY STYLES TO MIXIN - ACTS AS A RESET
// example usage: @include icon-font(icon-name);
@mixin icon-font($icon: false) {
	@extend %icon-font;

	@if $icon == "icon-name" {
		content: '\e800';
	}
}

[class^="icon-"]:before, [class*=" icon-"]:before {
	@include icon-font();
}

// Icon Font Glyph Code
.icon-example:before { content: '\e800'; }