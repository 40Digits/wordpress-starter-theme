//=================================
// SYMBOLS
//=================================

@font-face {
	font-family: "<%= fontName %>";
	src: url('<%= fontPath %><%= fontName %>.eot');
	src: url('<%= fontPath %><%= fontName %>.eot?#iefix') format('eot'),
		url('<%= fontPath %><%= fontName %>.woff') format('woff'),
		url('<%= fontPath %><%= fontName %>.ttf') format('truetype'),
		url('<%= fontPath %><%= fontName %>.svg#<%= fontName %>') format('svg');
	font-weight: normal;
	font-style: normal;
}

// Symbols placeholder to extend inside the mixin.
%symbols {
	font-family: "<%= fontName %>";
	width: 1em;
	margin: 0;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-align: center;
	text-decoration: inherit;
	text-transform: none;
	line-height: 1em;
	speak: none;
}

// Styles applied to the .symbol class when adding symbols to the markup.
.<%= className %>:before {
	font-family: "<%= fontName %>";
	width: 1em;
	margin: 0;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-align: center;
	text-decoration: inherit;
	text-transform: none;
	line-height: 1em;
	speak: none;
}

// Mixin to add in your own symbol through the css.
// The mixin only works with :pseudo
@mixin symbols($symbol: false) {
	@extend %symbols;
<% _.each(glyphs, function(glyph) { %>
	@if $symbol == "<%= glyph.name %>" {
		content: '\<%= glyph.codepoint.toString(16).toUpperCase() %>';
	}<% }); %>
}

// Individual CSS styles for when you call by the class name in markup.
<% _.each(glyphs, function(glyph) { %>.s-<%= glyph.name %>:before { content: "\<%= glyph.codepoint.toString(16).toUpperCase() %>" }
<% }); %>